var documenterSearchIndex = {"docs":
[{"location":"#OptimalTransmissionRouting.jl-Documentation","page":"Home","title":"OptimalTransmissionRouting.jl Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = OptimalTransmissionRouting","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"OptimalTransmissionRouting.jl is a Julia/JuMP package to determine the optimal transmission system route considering spatial information. The underlying priciple is that spatial information coming from an image file is convertered to an array of installation cost weights (see io/spatialimagefiles). To that end spatial infromation from http://www.eea.europa.eu/data-and-maps/data/corine-land-cover-2006-raster-2 is used. The created array represents a weighted graph connecting a number of nodes horizontally, vertiacally and diagonally with graph weights reflecting the installation costs for each region of the map. Using the A-star algorithm, the shortest path in this weighted graph is found, which provides the least cost transmission path.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Developed by:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Hakan Ergun KU Leuven / EnergyVille","category":"page"},{"location":"","page":"Home","title":"Home","text":"Installation The latest stable release of OptimalTransmissionRouting.jl can be installed using the Julia package manager with","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pkg.add(\"OptimalTransmissionRouting\")","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The first step is to define the locations of the sending and recieving end buses in latitude and longitude using a dictionary, e.g.,","category":"page"},{"location":"","page":"Home","title":"Home","text":"bus1 = Dict{String, Any}()\nbus1[\"longitude\"] = 16.2487678\nbus1[\"latitude\"] = 40.358515\nbus2 = Dict{String, Any}()\nbus2[\"longitude\"] = 14.1482998\nbus2[\"latitude\"] = 37.5900782","category":"page"},{"location":"","page":"Home","title":"Home","text":"First using:","category":"page"},{"location":"","page":"Home","title":"Home","text":"spatial_weights, voltages, resolution = OTR.define_weights_voltages(strategy)","category":"page"},{"location":"","page":"Home","title":"Home","text":"the spatial weights can be defined, which uses the chosen strategy as input as a string. The possible options are:","category":"page"},{"location":"","page":"Home","title":"Home","text":"strategy = \"all_permitted\"\nstrategy = \"OHL_on_existing_corridors\"\nstrategy = \"cables_only\"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Furter the vertices of the graph are created, assinging each vertex to one or more spatial regions, e.g., urban, mountain, sea, ....., using:","category":"page"},{"location":"","page":"Home","title":"Home","text":"rgb_values, nodes_lp, boundaries, plot_dictionary = OTR.convert_image_files_to_weights(bus1, bus2)  ","category":"page"},{"location":"","page":"Home","title":"Home","text":"Additional input data is required as a dictionary, which is provided below:","category":"page"},{"location":"","page":"Home","title":"Home","text":"#define inputs\ninput_data = Dict{String, Any}()\n\ninput_data[\"resolution_factor\"] = 2 # resolution_factor 1,2,3, ... to speed up algorithm\ninput_data[\"algorithm_factor\"] = 1 # algorithm_factor 1.....1.3 to speed up Astar algorithm, goes at expense of accuracy\ninput_data[\"distance\"] = 2.5  # do not change: this is the standard resolution of the environmental data\ninput_data[\"algorithm\"] = \"Astar\"  # \"Astar\" or \"Dijkstra\"\ninput_data[\"voltages\"] = voltages # transmission voltages\ninput_data[\"spatial_weights\"] = spatial_weights # spatial weights\ninput_data[\"rgb_values\"] = rgb_values # Spatial data as RGB values\ninput_data[\"boundaries\"] = boundaries # VBoundaries of the area (to avoid using full European range)\ninput_data[\"overlapping_area_weight\"] = \"average\" # \"average\" = average weight of the spatial weights; \"minimum\" = minimum of the overlapping weights\ninput_data[\"strategy\"] = strategy # or \"OHL_on_existing_corridors\" or \"cables_only\"\ninput_data[\"losses\"] = 0.01 # proxy for losses\ninput_data[\"lifetime\"] = 30 # lifetime: NOT USED in FLEXPLAN\ninput_data[\"interest\"] = 0.02 # Interest: NOT USED in FLEXPLAN \ninput_data[\"technology\"] = \"dc\" # or \"dc\"\ninput_data[\"power_rating\"] = 2000 # power rating\ninput_data[\"start_node\"] = Dict{String, Any}()\ninput_data[\"start_node\"][\"x\"] = nodes_lp[\"x1\"]\ninput_data[\"start_node\"][\"y\"] = nodes_lp[\"y1\"] \ninput_data[\"end_node\"] = Dict{String, Any}()\ninput_data[\"end_node\"][\"x\"] = nodes_lp[\"x2\"]\ninput_data[\"end_node\"][\"y\"] = nodes_lp[\"y2\"] ","category":"page"},{"location":"","page":"Home","title":"Home","text":"Finally, the creation of the edges of the graph and the optimisation of the route is carried out using:","category":"page"},{"location":"","page":"Home","title":"Home","text":"spatial_data, spatial_data_matrices, cost_data, equipment_data, c_tot, optimal_path, ac_dc, ac_cab, dc_cab  = OTR.do_optimal_routing(input_data)","category":"page"},{"location":"","page":"Home","title":"Home","text":"During the route optimisation, following aspects are considered:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Maximum offshore length for AC cables\nCosts for switching between overhead lines and underground cables, e.g., transition station costs\nIn case of HVDC technology: Costs of the converter stations\nChosen strategy:","category":"page"},{"location":"","page":"Home","title":"Home","text":"– OHL can be installed everywhere (depending on the chosen weights) – OHL can only be installed in existing infrastructure corridors – Only underground cables can be installed","category":"page"},{"location":"","page":"Home","title":"Home","text":"If certain vertices belong to multiple spatial areas, which weight should be chosen:","category":"page"},{"location":"","page":"Home","title":"Home","text":"– The average of both weights – The minimum of both weights","category":"page"},{"location":"","page":"Home","title":"Home","text":"Also using the function:","category":"page"},{"location":"","page":"Home","title":"Home","text":"OTR.plot_result(plot_dictionary, input_data, spatial_data, spatial_data_matrices, optimal_path)","category":"page"},{"location":"","page":"Home","title":"Home","text":"a PDF of the obtained solution can be created.","category":"page"}]
}
